{"files":[{"id":"3dc4c4d7-738a-4f1d-ab56-9a1571839850","name":"Code","type":"server_js","source":"function init() {\n  log(\"Load tech gallery settings...\");\n  var session \u003d loadConfig();\n \n  session.team \u003d retrieveLogins(session.sheetTech, session.teamRange);\n  session.stack \u003d retrieveTechnologies(session.sheetTech, session.technologiesRange);\n  \n  return session;\n}\n\n/*\n * Retrieve skill from tech-gallery and write on skills sheet. \n *\n */\nfunction update(session) {\n  log(\"Team size: \" + session.team.length + \" -\u003e Updating skills \");\n  cleanSkills(session);\n  updateSkills(session);\n  \n  log(\"Finish\");\n}\n\n/**\n * Return list of skill for each member of team. \n */\nfunction findTechnologies(session) {\n  var techGalleryUrl \u003d session.techGalleryUrl;\n  var team \u003d session.team;\n  var skills \u003d new Array(team.length);\n  var skillCount \u003d 0;\n  \n  // retrieve skill from techgallery\n  for (i in team) {\n    var login \u003d team[i];\n\n    var people \u003d fetchTechnologiesByLogin(techGalleryUrl, login);\n    \n    if (people \u003d\u003d null) {\n      Logger.log(\"User %s is undefined\", login);\n      continue;\n    }\n    \n    var techsPeople \u003d people.technologies;\n    \n    if (typeof techsPeople \u003d\u003d\u003d \"undefined\" ) {\n      Logger.log(\"No technologies defined yet\" );\n      continue;\n    }\n    \n    // first get the index of skills by (name + skill)\n    var skillsId \u003d new Array();\n    for(var sIx in session.skillsList)\n    {\n      if(session.skillsList[sIx][0] \u003d\u003d\u003d \"\") break;\n      \n      skillsId[(session.skillsList[sIx][0] + session.skillsList[sIx][1]).toLowerCase()] \u003d sIx;\n    }\n    \n    // full skill list\n    for (t in techsPeople) {\n      var skillIndex \u003d skillCount++;\n      skills[skillIndex] \u003d new Array(5);\n      skills[skillIndex][0] \u003d login;\n      skills[skillIndex][1] \u003d techsPeople[t].technologyName;\n      skills[skillIndex][2] \u003d techsPeople[t].skillLevel;\n      skills[skillIndex][3] \u003d techsPeople[t].endorsementsCount;\n\n      // track last update for each skill\n      var ix \u003d skillsId[(login + techsPeople[t].technologyName).toLowerCase()];\n      skills[skillIndex][4] \u003d (ix !\u003d null \u0026\u0026 session.skillsList[ix][4] !\u003d\u003d \"\" \n                               \u0026\u0026 session.skillsList[ix][2] \u003d\u003d\u003d techsPeople[t].skillLevel\n                               \u0026\u0026 session.skillsList[ix][3] \u003d\u003d\u003d techsPeople[t].endorsementsCount) ? session.skillsList[ix][4] : new Date();\n    }\n    \n    notifyPeople(session, login, skillsId, skills);\n  }\n  \n  return skills;\n}\n\n/*\n* Send email asking people to update skills:\n* - that the last update was 3 months or older\n* - that is empty\n*/\nfunction notifyPeople(session, login, skillsId, skills)\n{\n  if(session.sendNotification)\n  {\n    var message \u003d \"\";\n    for(t in session.stack)\n    {\n      var ix \u003d skillsId[(login + session.stack[t]).toLowerCase()];\n      if(ix \u003d\u003d undefined || (ix !\u003d undefined \u0026\u0026 DateDiff.inMonths(skills[ix][4], new Date()) \u003e\u003d 3))\n      {\n        var techId \u003d session.stack[t].toLowerCase().replace(new RegExp(\"[^[:ascii:]]\"), \"\").replace(new RegExp(\"[\\\\{#/ }]\"),\"_\");\n        //SpreadsheetApp.getUi().alert();\n        message +\u003d \"Tecnologia: \u003ca href\u003d\u0027https://techgallery.ciandt.com/#/technologies/\"+techId+\"\u0027\u003e\"+session.stack[t]+\"\u003c/a\u003e, \" + \n          \"Skill atual: \" + (ix !\u003d null ? skills[ix][2] : \"\u003cspan style\u003d\u0027color: #ff0000\u0027\u003enão preenchido!\u003c/span\u003e\") + \"\u003cbr/\u003e\";\n      }\n    }\n    \n    if(message !\u003d\u003d \"\")\n    {\n      //SpreadsheetApp.getUi().alert(message);\n      sendMail(login, message, session);\n    }\n  }\n}\n\n/*\n * This function sends request to tech gallery to retrieve people info and \n * technologies skills. \n */\nfunction fetchTechnologiesByLogin(techGalleryUrl, login) {\n  \n  if (login \u003d\u003d null || login \u003d\u003d \"\") { \n    return null;\n  }\n \n  var queryString \u003d \"?email\u003d\"+login+\"@ciandt.com\";\n  \n  var uri \u003d techGalleryUrl + queryString;\n\n  var options \u003d {\n        \"method\" : \"get\"\n  };\n\n  try {\n    var jsondata \u003d UrlFetchApp.fetch(uri, options);   \n    return JSON.parse(jsondata.getContentText());\n  } catch (e) {\n    Logger.log(e);\n    return null;\n  }\n}\n\nfunction cleanSkills(session) {\n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(session.sheetSkills);\n  session.skillsList \u003d sheet.getRange(2, 2, sheet.getMaxRows()-1, 5).getValues();\n  sheet.getRange(2, 2, sheet.getMaxRows()-1, 5).clearContent();\n}\n\nfunction updateSkills(session) {\n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(session.sheetSkills);\n  \n  var skills \u003d findTechnologies(session);\n  \n  // ignore setValues if skills array is empety\n  if (!skills[0]) {\n    Logger.log(\"Nothing to write\")\n  } else {\n    // write skills\n    sheet.getRange(2, 2, skills.length, 5).setValues(skills);\n  }\n}\n\n/**\n * Retrieve list people from team sheet\n */\nfunction retrieveLogins(sheetTech, teamRange) {\n  var teamSheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetTech);\n  var team \u003d teamSheet.getRange(teamRange).getValues();\n \n  // transpose horizontal to vertical array\n  var newteam \u003d transpose(team);\n  \n  var logins \u003d new Array();\n  \n  for (i in newteam) {\n    var value \u003d newteam[i][0];\n    if (value !\u003d \"\") { \n      logins[i] \u003d value;\n    }\n  }\n  \n  return logins;  \n}\n\n/**\n * Retrieve list people from team sheet\n */\nfunction retrieveTechnologies(sheetTech, technologiesRange) {\n  var sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(sheetTech);\n  var technologies \u003d sheet.getRange(technologiesRange).getValues();\n  \n  var items \u003d new Array();\n  \n  for (i in technologies) {\n    var value \u003d technologies[i][0];\n    if (value !\u003d \"\") { \n      items[i] \u003d value;\n    }\n  }\n \n  return items;  \n}\n\nfunction loadConfig() {\n  \n  var configSheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\"Config\");\n  var configRange \u003d configSheet.getRange(1, 1, configSheet.getLastRow(), 2).getValues();\n  \n  Logger.log(\"Config size: \" + configRange.length)\n  // config default url for tech gallery\n  var url \u003d \"https://tech-gallery.appspot.com/_ah/api/rest/v1/profile\";\n  if (configRange.length \u003e\u003d 10) { \n    url : configRange[9][1]\n  }\n    \n  var config \u003d {\n    tower : configRange[1][1],\n    contract : configRange[2][1],\n    flow: configRange[3][1],\n    owner: configRange[4][1],\n    sheetSkills : configRange[5][1],\n    sheetTech : configRange[6][1],\n    teamRange : configRange[7][1],\n    technologiesRange : configRange[8][1],\n    techGalleryUrl : url,\n    team : new Array(),\n    stack : new Array(),\n    version : 1\n  };\n  \n  return config; \n}\n\nvar DateDiff \u003d {\n  inMonths: function(d1, d2) {\n    var d1Y \u003d d1.getFullYear();\n    var d2Y \u003d d2.getFullYear();\n    var d1M \u003d d1.getMonth();\n    var d2M \u003d d2.getMonth();\n\n    return (d2M+12*d2Y)-(d1M+12*d1Y);\n  }\n}\n\nfunction sendMail(login, message, session)\n{\n  try\n  {\n    MailApp.sendEmail({\n      to: login + \"@ciandt.com\",\n      subject: \"Knowledge Map: Tech Gallery\",\n      htmlBody: \"Olá, \" + login + \"! \u003cbr/\u003e\u003cbr/\u003e Você possui tecnologias as quais não atualizou a proficiência \" + \n      \"nos últimos 3 meses ou não preencheu ainda, favor revisar a lista abaixo: \u003cbr/\u003e\u003cbr/\u003e \" + message +\n      \"\u003cbr/\u003e\u003cbr/\u003e\u003ca href\u003d\u0027\" + SpreadsheetApp.getActiveSpreadsheet().getUrl() + \"\u0027\u003eLink para o mapa de conhecimento.\u003c/a\u003e\"\n   });\n  }\n  catch(ex){}\n}\n"},{"id":"7d7dc186-de65-4a63-9b9f-0c3c3cde32d9","name":"Utils","type":"server_js","source":"/*\n * Print log ui\n */\nfunction log(msg){\n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  ss.toast(msg, \"Tech Gallery!\");\n}\n\n/**\n * Replace non ascii character to \"_\" from string parameter\n */\nfunction cleanUp(string) {\n  if (string !\u003d \"\") {\n    return string.replace(/[^0-9a-zA-Z]/g,\u0027_\u0027).toLowerCase();\n  } else {\n    return \"UNDEFINED_FLOW\";\n  }\n}\n\n/**\n * Apply trasponse function on array input\n */ \nfunction transpose(a) {\n  return a[0].map(function (_, c) { return a.map(function (r) { return r[c]; }); });\n}"}]}